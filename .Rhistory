x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, group = Area_Category)) +
geom_boxplot() +
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Median Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Your previous plotting code goes here...
# Instead of using p_line / p_box, you would combine them with patchwork syntax
p_combined <- p_line / p_box
# Plot the combined plot
p_combined
# Save the combined plot
ggsave("Monthly_Median_Unit_Price_PSM_by_Area_Category_Q1_2024.png", p_combined, width = 12, height = 8, dpi = 300)
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, group = Area_Category)) +
geom_boxplot() +
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Median Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Your previous plotting code goes here...
# Instead of using p_line / p_box, you would combine them with patchwork syntax
p_combined <- p_line / p_box
# Plot the combined plot
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Unit.Price....PSM, group = Area_Category)) +
geom_boxplot() +
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Unit.Price....PSM") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_combined <- p_line / p_box
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, group = Area_Category)) +
geom_boxplot() +
geom_jitter(width = 0.2) +  # 添加点
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Median Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_combined <- p_line / p_box
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(data_q1, aes(x = Area_Category, y = `Unit.Price.PSM`, color = Area_Category)) +
geom_boxplot(outlier.shape = NA) +  # 隐藏默认的离群点
geom_jitter(width = 0.2, alpha = 0.5) +  # 添加点
facet_wrap(~Month, scales = "free_y") +
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
p_combined <- p_line / p_box
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price.PSM`, na.rm = TRUE), .groups = "drop")
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 使用正确的列名替换 `Unit.Price....PSM.`
# 请确保 'Unit.Price.PSM' 与数据中的实际列名相匹配
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price.PSM`, na.rm = TRUE), .groups = "drop")
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, group = Area_Category)) +
geom_boxplot() +
geom_jitter(width = 0.2) +  # 添加点
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Median Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_combined <- p_line / p_box
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_violin <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, fill = Area_Category)) +
geom_violin(trim = FALSE) + # 创建小提琴图
geom_jitter(width = 0.2, alpha = 0.5) + # 添加数据点，alpha用于设置透明度以减少重叠点的视觉混乱
facet_wrap(~Month, scales = "free") + # 按月份分面
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
# 绘制小提琴图
p_combined <- p_line / p_violin
p_combined
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
price_by_area_month <- data_q1 %>%
group_by(Area_Category, Month) %>%
summarise(Median_Unit_Price_PSM = median(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop")
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
p_box <- ggplot(price_by_area_month, aes(x = Area_Category, y = Median_Unit_Price_PSM, group = Area_Category)) +
geom_boxplot() +
geom_jitter(width = 0.2) +  # 添加点
facet_wrap(~Month, scales = "free") +
labs(title = "Monthly Median Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Median Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p_combined <- p_line / p_box
p_combined
library(tidyverse)
library(lubridate)
library(ggplot2)
# 数据预处理
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price.PSM`, na.rm = TRUE), .groups = "drop") # 确保列名正确
data_cleaned <- data %>%
mutate(
`Sale.Date` = dmy(`Sale.Date`),
`Area..SQM.` = as.numeric(gsub(",", "", `Area..SQM.`)),
`Unit.Price....PSM.` = as.numeric(gsub("\\$", "", gsub(",", "", `Unit.Price....PSM.`)))
)
data_cleaned <- data_cleaned %>%
mutate(
`Area..SQM.` = ifelse(is.na(`Area..SQM.`), 0, `Area..SQM.`)
)
data_cleaned <- data_cleaned %>%
mutate(
Area_Category = cut(
`Area..SQM.`,
breaks = c(0, 100, 200, 300, 400, Inf),
labels = c("<100", "100-200", "200-300", "300-400", ">400"),
include.lowest = TRUE
)
)
library(tidyverse)
library(lubridate)
library(ggplot2)
# 数据预处理
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop") # 确保列名正确
# 绘制每日平均单价的线图
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 使用原始数据绘制小提琴图和数据点
p_violin <- ggplot(data_q1, aes(x = Area_Category, y = `Unit.Price.PSM`, fill = Area_Category)) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.2, alpha = 0.5) +  # 添加点
facet_wrap(~Month, scales = "free_y") +
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
# 组合两个图形
library(patchwork)
p_combined <- p_line / p_violin
# 显示组合图
p_combined
library(tidyverse)
library(lubridate)
library(ggplot2)
# 数据预处理
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop") # 确保列名正确
# 绘制每日平均单价的线图
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 使用原始数据绘制小提琴图和数据点
p_violin <- ggplot(data_q1, aes(x = Area_Category, y = `Unit.Price....PSM.`, fill = Area_Category)) +
geom_violin(trim = FALSE) +
geom_jitter(width = 0.2, alpha = 0.5) +  # 添加点
facet_wrap(~Month, scales = "free_y") +
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
# 组合两个图形
library(patchwork)
p_combined <- p_line / p_violin
# 显示组合图
p_combined
# 如果需要保存图表
ggsave("Monthly_Unit_Price_PSM_by_Area_Category_Q1_2024.png", plot = p_combined, width = 12, height = 8, dpi = 300)
library(tidyverse)
library(lubridate)
library(ggplot2)
# 数据预处理
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop") # 确保列名正确
# 绘制每日平均单价的线图
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 使用原始数据绘制小提琴图和数据点
p_box <- ggplot(data_q1, aes(x = Area_Category, y = `Unit.Price....PSM.`, fill = Area_Category)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +  # 添加点
facet_wrap(~Month, scales = "free_y") +
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
# 组合两个图形
library(patchwork)
p_combined <- p_line / p_box
# 显示组合图
p_combined
# 如果需要保存图表
ggsave("Monthly_Unit_Price_PSM_by_Area_Category_Q1_2024.png", plot = p_combined, width = 12, height = 8, dpi = 300)
pacman::p_load(tidyverse, lubridate, ggplot2,patchwork)
data1 = read.csv("data/ResidentialTransaction20240308160536.csv")
data2 = read.csv("data/ResidentialTransaction20240308160736.csv")
data3 = read.csv("data/ResidentialTransaction20240308161009.csv")
data4 = read.csv("data/ResidentialTransaction20240308161109.csv")
data5 = read.csv("data/ResidentialTransaction20240414220633.csv")
data <- bind_rows(data1, data2, data3, data4, data5)
glimpse(data)
data_cleaned <- data %>%
mutate(
`Sale.Date` = dmy(`Sale.Date`),
`Area..SQM.` = as.numeric(gsub(",", "", `Area..SQM.`)),
`Unit.Price....PSM.` = as.numeric(gsub("\\$", "", gsub(",", "", `Unit.Price....PSM.`)))
)
data_cleaned <- data_cleaned %>%
mutate(
`Area..SQM.` = ifelse(is.na(`Area..SQM.`), 0, `Area..SQM.`)
)
data_cleaned <- data_cleaned %>%
mutate(
Area_Category = cut(
`Area..SQM.`,
breaks = c(0, 100, 200, 300, 400, Inf),
labels = c("<100", "100-200", "200-300", "300-400", ">400"),
include.lowest = TRUE
)
)
library(tidyverse)
library(lubridate)
library(ggplot2)
# 数据预处理
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01"), `Sale.Date` <= ymd("2024-03-31")) %>%
mutate(Month = floor_date(`Sale.Date`, "month"))
# 计算每日平均单价
avg_price_by_area <- data_q1 %>%
group_by(Area_Category, `Sale.Date`) %>%
summarise(Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE), .groups = "drop") # 确保列名正确
# 绘制每日平均单价的线图
p_line <- ggplot(avg_price_by_area, aes(x = `Sale.Date`, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +
geom_line() +
labs(title = "Daily Average Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Date",
y = "Average Price ($ PSM)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# 使用原始数据绘制小提琴图和数据点
p_box <- ggplot(data_q1, aes(x = Area_Category, y = `Unit.Price....PSM.`, fill = Area_Category)) +
geom_boxplot() +
geom_jitter(width = 0.2, alpha = 0.5) +  # 添加点
facet_wrap(~Month, scales = "free_y") +
labs(title = "Monthly Unit Price ($ PSM) by Area Category (Q1 2024)",
x = "Area Category",
y = "Price ($ PSM)") +
theme_minimal() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1))
# 组合两个图形
library(patchwork)
p_combined <- p_line / p_box
# 显示组合图
p_combined
# 如果需要保存图表
ggsave("Monthly_Unit_Price_PSM_by_Area_Category_Q1_2024.png", plot = p_combined, width = 12, height = 8, dpi = 300)
project_stats <- data_cleaned %>%
filter(`Project.Name` != "N.A.") %>%
group_by(`Project.Name`) %>%
summarise(Total_Units = sum(`Number.of.Units`, na.rm = TRUE),
Avg_Unit_Price_PSM = mean(`Unit.Price....PSM.`, na.rm = TRUE)) %>%
ungroup()
top_projects <- project_stats %>%
top_n(25, Total_Units) %>%
arrange(desc(Total_Units))
p <- ggplot(top_projects, aes(x = reorder(`Project.Name`, Total_Units))) +
geom_bar(aes(y = Total_Units), stat = "identity", fill = 'steelblue') +
scale_y_continuous(name = "Total Number of Units",
sec.axis = sec_axis(~ . / max(top_projects$Avg_Unit_Price_PSM, na.rm = TRUE) * max(top_projects$Total_Units, na.rm = TRUE),
name = "Average Unit Price ($ PSM)")) +
geom_line(aes(y = Avg_Unit_Price_PSM / max(top_projects$Avg_Unit_Price_PSM, na.rm = TRUE) * max(top_projects$Total_Units, na.rm = TRUE), group = 1), color = 'darkorange', size = 1) +
geom_point(aes(y = Avg_Unit_Price_PSM / max(top_projects$Avg_Unit_Price_PSM, na.rm = TRUE) * max(top_projects$Total_Units, na.rm = TRUE)), color = 'darkorange', size = 3) +
labs(title = "Top 25 Projects by Transaction Volume and Average Price PSM in Singapore (Q1 2024)",
x = "Project Name") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
print(p)
data_cleaned <- data_cleaned %>%
mutate(`Purchaser.Address.Indicator` = as.character(`Purchaser.Address.Indicator`)) %>%
filter(`Purchaser.Address.Indicator` != "N.A." & `Purchaser.Address.Indicator` != "N.A")
data_q1 <- data_cleaned %>%
filter(`Sale.Date` >= ymd("2024-01-01") & `Sale.Date` <= ymd("2024-03-31"))
data_q1 <- data_q1 %>%
mutate(
Area_Cat = case_when(
`Area..SQM.` < 100 ~ "<100",
`Area..SQM.` >= 100 & `Area..SQM.` < 200 ~ "100-200",
`Area..SQM.` >= 200 & `Area..SQM.` < 300 ~ "200-300",
`Area..SQM.` >= 300 & `Area..SQM.` < 400 ~ "300-400",
`Area..SQM.` >= 400 ~ ">400"
)
) %>%
group_by(Area_Cat, `Type.of.Sale`, `Purchaser.Address.Indicator`) %>%
summarise(
Number_of_Sales = n(),
Avg_Price = mean(`Unit.Price....PSM.`, na.rm = TRUE),
.groups = 'drop'
) %>%
mutate(Avg_Price_Scaled = Avg_Price / max(Avg_Price) * max(Number_of_Sales))  # 缩放平均价格
p <- ggplot(data_q1, aes(x = Area_Cat, y = Number_of_Sales, fill = `Purchaser.Address.Indicator`)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_line(aes(y = Avg_Price_Scaled, group = `Purchaser.Address.Indicator`, color = `Purchaser.Address.Indicator`), size = 1) +
geom_point(aes(y = Avg_Price_Scaled, color = `Purchaser.Address.Indicator`), size = 2) +
scale_y_continuous(
name = "Number of Sales",
sec.axis = sec_axis(~ . / max(data_q1$Number_of_Sales) * max(data_q1$Avg_Price), name = "Average Price ($ PSM)")
) +
labs(title = "Distribution of Sales by Area Category, Type, and Purchaser Address Indicator (Q1 2024)",
x = "Area Category (SQM)",
y = "Number of Sales") +
scale_fill_brewer(palette = "Set1") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom"
)
print(p)
