[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISS608.VAA",
    "section": "",
    "text": "id: Hands-on_Exercise contents: - “Hand-on_EX//.qmd” sort: - “title” type: grid fields: [image, date, title, author]\n\nid: In-class_Exercise contents:\n\n“In-class_EX//.qmd” sort:\n“title” type: grid fields: [image, date, title, author]\n\nid: Take-home_Exercise contents:\n\n“Take-home_Ex//.qmd” sort:\n“title” type: grid fields: [image, date, title, author]"
  },
  {
    "objectID": "index.html#welcome-to-my-page.",
    "href": "index.html#welcome-to-my-page.",
    "title": "ISS608.VAA",
    "section": "",
    "text": "id: Hands-on_Exercise contents: - “Hand-on_EX//.qmd” sort: - “title” type: grid fields: [image, date, title, author]\n\nid: In-class_Exercise contents:\n\n“In-class_EX//.qmd” sort:\n“title” type: grid fields: [image, date, title, author]\n\nid: Take-home_Exercise contents:\n\n“Take-home_Ex//.qmd” sort:\n“title” type: grid fields: [image, date, title, author]"
  },
  {
    "objectID": "In-class_EX/In-class_EX04/In-class _EX04.html",
    "href": "In-class_EX/In-class_EX04/In-class _EX04.html",
    "title": "In-class_EX04",
    "section": "",
    "text": "pacman::p_load(tidyverse, ggstatsplot,tidyr,dplyr,rstantools,readxl, performance, parameters)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  #type = \"parametric\",\"bayes\",\n  test.value = 60,\n  bin.args = list(color = \"black\",\n                  fill = \"grey50\",\n                  alpha = 0.7),\n  normal.curve = FALSE,\n  normal.curve.args = list(linewidth = 2),\n  xlab = \"English scores\"\n)\n\n\n\n\n\nggdotplotstats(\n  data = exam,\n  x = ENGLISH,\n  y = CLASS,\n  title = \"\",\n  xlab = \"\"\n  \n)\n\n\n\n\n\nexam_long &lt;- exam %&gt;%\n  pivot_longer(\n  cols = ENGLISH:SCIENCE,\n  names_to = \"SUBJECT\",\n  values_to = \"SCORES\") %&gt;%\n filter(CLASS == \"3A\")\nggwithinstats(data = filter(exam_long,\n                            SUBJECT %in% c(\"ENGLISH\", \"SCIENCE\")),\n              x = \"SUBJECT\",\n              y = \"SCORES\",\n              type = \"p\")\n\n\n\n\n\nggscatterstats(data = exam,\n               x = MATHS,\n               y = ENGLISH,\n               marginal = TRUE,\n               label.var = ID,\n               label.expression = ENGLISH &gt; 90 & MATHS &gt; 90,\n  \n  )\n\n\n\n\n\nggscatterstats(data = exam,\n               x = MATHS,\n               y = ENGLISH,\n               marginal = TRUE,\n               label.var = ID,\n               label.expression = ENGLISH &gt; 90 & MATHS &gt; 90,\n  \n)\n\n\n\n\n\ndata_cars &lt;- read_xls(\"data/ToyotaCorolla.xls\",\"data\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "Hello,today we choose the analysis from ZOU JIAXUN.I’ll criticize you.\n\n\n\n\n\nThis scatter plot, which displays the relationship between property area (in square feet) and transacted prices (in thousands of dollars), is created from a randomly sampled subset of 500 data points from a comprehensive dataset, rather than isolating data from the first quarter of 2024. This approach may not provide an accurate reflection of the specific market conditions of early 2024, as it includes data from various time periods with potentially different economic influences. Additionally, the plot does not differentiate between types of sales, such as new homes, resales, or foreclosures, which can vary significantly in pricing dynamics. This aggregation could obscure distinct patterns and trends that are more apparent when analyzing these groups separately, leading to less precise insights for targeted strategic decision-making or market analysis.\n\n\n\n\nFirst import the packages used for the original analysis and the packages required for the new analysis.\n\npacman::p_load(dplyr, purrr, readr, ggiraph,\n               ggplot2, lubridate, ggrepel,\n               patchwork, ggthemes, hrbrthemes, tidyverse, plotly, readr)\n\n\n\n\n\ndata1 = read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata2 = read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata3 = read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata4 = read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata5 = read_csv(\"data/ResidentialTransaction20240414220633.csv\")\ncombined_data &lt;- bind_rows(data1, data2, data3, data4, data5)\n\nglimpse(combined_data)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nClean and process data\n\nlibrary(dplyr)\nlibrary(lubridate)\n\ndata_cleaned &lt;- combined_data %&gt;%\n  mutate(`Sale Date` = dmy(`Sale Date`)) %&gt;%\n  mutate(`Area (SQM)` = as.numeric(gsub(\",\", \"\", `Area (SQM)`))) %&gt;%\n  mutate(`Unit Price ($ PSM)` = as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", `Unit Price ($ PSM)`)))) %&gt;%\n  mutate(`Area (SQM)` = ifelse(is.na(`Area (SQM)`), 0, `Area (SQM)`)) %&gt;%\n  mutate(Area_Category = cut(\n    `Area (SQM)`,\n    breaks = c(0, 100, 200, 300, 400, Inf),\n    labels = c(\"&lt;100\", \"100-200\", \"200-300\", \"300-400\", \"&gt;400\"),\n    include.lowest = TRUE\n  ))\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(Quarter = paste(year(`Sale Date`), \n                         ifelse(month(`Sale Date`) %in% c(1, 2, 3), \"Q1\",\n                                ifelse(month(`Sale Date`) %in% c(4, 5, 6), \"Q2\",\n                                       ifelse(month(`Sale Date`) %in% c(7, 8, 9), \"Q3\", \"Q4\"))), sep = \"-\"))\n\nstr(data_cleaned)\n\ntibble [26,806 × 23] (S3: tbl_df/tbl/data.frame)\n $ Project Name               : chr [1:26806] \"THE REEF AT KING'S DOCK\" \"URBAN TREASURES\" \"NORTH GAIA\" \"NORTH GAIA\" ...\n $ Transacted Price ($)       : num [1:26806] 2317000 1823500 1421112 1258112 1280000 ...\n $ Area (SQFT)                : num [1:26806] 883 883 1076 1033 872 ...\n $ Unit Price ($ PSF)         : num [1:26806] 2625 2066 1320 1218 1468 ...\n $ Sale Date                  : Date[1:26806], format: \"2023-01-01\" \"2023-01-02\" ...\n $ Address                    : chr [1:26806] \"12 HARBOURFRONT AVENUE #05-32\" \"205 JALAN EUNOS #08-02\" \"29 YISHUN CLOSE #08-10\" \"45 YISHUN CLOSE #07-42\" ...\n $ Type of Sale               : chr [1:26806] \"New Sale\" \"New Sale\" \"New Sale\" \"New Sale\" ...\n $ Type of Area               : chr [1:26806] \"Strata\" \"Strata\" \"Strata\" \"Strata\" ...\n $ Area (SQM)                 : num [1:26806] 82 82 100 96 81 ...\n $ Unit Price ($ PSM)         : num [1:26806] 28256 22238 14211 13105 15802 ...\n $ Nett Price($)              : chr [1:26806] \"-\" \"-\" \"-\" \"-\" ...\n $ Property Type              : chr [1:26806] \"Condominium\" \"Condominium\" \"Executive Condominium\" \"Executive Condominium\" ...\n $ Number of Units            : num [1:26806] 1 1 1 1 1 1 1 1 1 1 ...\n $ Tenure                     : chr [1:26806] \"99 yrs from 12/01/2021\" \"Freehold\" \"99 yrs from 15/02/2021\" \"99 yrs from 15/02/2021\" ...\n $ Completion Date            : chr [1:26806] \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" ...\n $ Purchaser Address Indicator: chr [1:26806] \"HDB\" \"Private\" \"HDB\" \"HDB\" ...\n $ Postal Code                : chr [1:26806] \"097996\" \"419535\" \"269343\" \"269294\" ...\n $ Postal District            : chr [1:26806] \"04\" \"14\" \"27\" \"27\" ...\n $ Postal Sector              : chr [1:26806] \"09\" \"41\" \"26\" \"26\" ...\n $ Planning Region            : chr [1:26806] \"Central Region\" \"East Region\" \"North Region\" \"North Region\" ...\n $ Planning Area              : chr [1:26806] \"Bukit Merah\" \"Bedok\" \"Yishun\" \"Yishun\" ...\n $ Area_Category              : Factor w/ 5 levels \"&lt;100\",\"100-200\",..: 1 1 1 1 1 4 5 2 1 2 ...\n $ Quarter                    : chr [1:26806] \"2023-Q1\" \"2023-Q1\" \"2023-Q1\" \"2023-Q1\" ...\n\n\nValidate data according to original methods\n::: panel-tabset ## Code\n\nduplicate &lt;- combined_data %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n\n\n\n\n\n\nduplicate\n\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name &lt;chr&gt;, Transacted Price ($) &lt;dbl&gt;,\n#   Area (SQFT) &lt;dbl&gt;, Unit Price ($ PSF) &lt;dbl&gt;, Sale Date &lt;chr&gt;,\n#   Address &lt;chr&gt;, Type of Sale &lt;chr&gt;, Type of Area &lt;chr&gt;, Area (SQM) &lt;dbl&gt;,\n#   Unit Price ($ PSM) &lt;dbl&gt;, Nett Price($) &lt;chr&gt;, Property Type &lt;chr&gt;,\n#   Number of Units &lt;dbl&gt;, Tenure &lt;chr&gt;, Completion Date &lt;chr&gt;,\n#   Purchaser Address Indicator &lt;chr&gt;, Postal Code &lt;chr&gt;,\n#   Postal District &lt;chr&gt;, Postal Sector &lt;chr&gt;, Planning Region &lt;chr&gt;, …\n\n\n::: panel-tabset ## Code\n\nF1 &lt;- ggplot(combined_data, aes(x = `Property Type`)) + \n    geom_bar_interactive(aes(fill = `Planning Region`), position = \"dodge\") +  \n    labs(x = \"Property Type\", y = \"Frequency\",\n         title = \"Frequency of Property Types by Planning Region\") +\n    facet_wrap(~ `Planning Region`, scales = \"free\") +\n    theme_stata(base_size = 2.5)\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\nList of 1\n $ axis.text.x:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : num 45\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n\n\n\n\n\n\n    F1\n\n\n\n\n\n\n\n\n\nThe absence of data from the previous year’s four quarters in the scatter plot analyzing the relationship between transacted prices and area poses certain challenges. Primarily, it limits the depth of market trend analysis over an extended period, potentially overlooking seasonal fluctuations and economic cycles that significantly influence real estate markets. Without this broader temporal context, the analysis might give undue emphasis to short-term variations or isolated events, potentially leading to a somewhat narrow perspective on market dynamics. Such a limitation curtails the capacity to observe and interpret long-term trends and the cyclical nature of the housing market, which are essential for comprehensive statistical analysis and forecasting.\nFurthermore, the lack of previous year data restricts year-over-year comparative analysis, crucial for evaluating market condition changes and understanding the influence of external economic factors like interest rate shifts or broader economic changes. For investors and policymakers, the unavailability of a more extended data range may hinder informed strategic decision-making. It limits the development of predictive models that rely on historical data to accurately project future market behaviors, thereby subtly reducing the analysis’s overall utility in supporting nuanced business and investment decisions.\nTo address the challenges of a limited temporal analysis, I have enhanced the dataset by incorporating data from the previous year and categorizing it by quarters. This addition allows for a more nuanced exploration of the changes and trends over time. By analyzing the data on a quarterly basis, we can better understand the seasonal fluctuations and the impact of economic cycles on the real estate market.\n\nCodePlotConclusion\n\n\n\nlibrary(plotly)\n\nP3_interactive &lt;- plot_ly(data = data_cleaned, x = ~`Area (SQFT)`, y = ~`Transacted Price ($)`, type = 'scatter', mode = 'markers',\n                          hoverinfo = 'text',\n                          transforms = list(\n                            list(\n                              type = 'filter',\n                              target = ~Quarter,\n                              operation = '=',\n                              value = unique(data_cleaned$Quarter)[1]  \n                            )\n                          ),\n                          text = ~paste(\"Price: \", `Transacted Price ($)`, \"&lt;br&gt;Area: \", `Area (SQFT)`, \"&lt;br&gt;Quarter: \", Quarter)) %&gt;%\n  layout(title = 'Scatter Plot of Transacted Price vs. Area',\n         xaxis = list(title = 'Area (SQFT)'),\n         yaxis = list(title = 'Transacted Price ($)'),\n         sliders = list(list(\n           active = 0,\n           currentvalue = list(prefix = \"Quarter: \"),\n           steps = lapply(unique(data_cleaned$Quarter), function(q) {\n             list(label = q, method = \"restyle\", args = list(\"transforms[0].value\", q))\n           })\n         )))\n\n\n\n\nP3_interactive\n\n\n\n\n\n\n\nThe interactive scatter plot offers several advantages over the static scatter plot with a trend line, particularly in terms of user engagement and analytical depth. Firstly, its interactivity enhances user experience by allowing for the exploration of individual data points through tooltips and dynamic elements such as sliders for temporal data filtering. This interactivity not only makes the data more accessible but also enables users to perform on-the-fly analysis of specific time periods without the need to switch between different plots. Moreover, the ability to zoom in and navigate through dense clusters of data points helps in examining detailed patterns that might be obscured in a static plot. This dynamic functionality is especially valuable in digital platforms where users expect an interactive and engaging data visualization experience.\n\n\n\n\n\n\nFailing to categorize data by “Type of Sale” in an analysis of real estate transactions introduces significant limitations that can obscure crucial insights into different market segments. Without this categorization, the analysis merges various types of transactions, such as new sales, resales, and sub-sales, into a single aggregated dataset. This aggregation can lead to a generalized overview that fails to capture the distinct behaviors and trends associated with each sale type.\nFirstly, different sale types often exhibit unique pricing patterns, demand cycles, and buyer preferences. For instance, new sales might be influenced by developer promotions and economic incentives, while resales are impacted more by the existing housing market conditions. Sub-sales, involving properties sold before their construction completion, might fluctuate based on speculative market sentiments. Without distinguishing these types, strategic decision-making becomes challenging as the nuanced dynamics of the market are not adequately represented.\nMoreover, policies and marketing strategies tailored to specific sale types cannot be effectively formulated or implemented without a clear understanding of the particular characteristics and needs of each segment. For example, marketing strategies that are effective for new developments might not work for resales. Therefore, by not categorizing data by “Type of Sale,” the analysis loses the potential to guide targeted interventions and optimize resource allocation, potentially leading to less effective strategies and missed opportunities in the market.\nTo enhance our analysis, I’ve processed the data to categorize it by different “Type of Sale.” This categorization allows us to delve into the specific characteristics and trends of new sales, resales, and sub-sales separately.\n\nCodePlotConclusion\n\n\n\nlibrary(plotly)\n\nP3_interactive &lt;- plot_ly(data = data_cleaned, x = ~`Area (SQFT)`, y = ~`Transacted Price ($)`, type = 'scatter', mode = 'markers',\n                          hoverinfo = 'text',\n                          transforms = list(\n                            list(\n                              type = 'filter',\n                              target = ~Quarter,\n                              operation = '=',\n                              value = unique(data_cleaned$Quarter)[1] \n                            ),\n                            list(\n                              type = 'filter',\n                              target = ~`Type of Sale`,\n                              operation = '=',\n                              value = unique(data_cleaned$`Type of Sale`)[1] \n                            )\n                          ),\n                          text = ~paste(\"Price: \", `Transacted Price ($)`, \"&lt;br&gt;Area: \", `Area (SQFT)`, \"&lt;br&gt;Quarter: \", Quarter, \"&lt;br&gt;Type of Sale: \", `Type of Sale`)) %&gt;%\n  layout(title = 'Scatter Plot of Transacted Price vs. Area',\n         xaxis = list(title = 'Area (SQFT)'),\n         yaxis = list(title = 'Transacted Price ($)'),\n         updatemenus = list(\n           list(\n             type = \"dropdown\",\n             direction = \"down\",\n             showactive = TRUE,\n             buttons = lapply(unique(data_cleaned$`Type of Sale`), function(type) {\n               list(\n                 method = \"restyle\",\n                 args = list(\"transforms[1].value\", type),\n                 label = type\n               )\n             })\n           )\n         ),\n         sliders = list(list(\n           active = 0,\n           currentvalue = list(prefix = \"Quarter: \"),\n           steps = lapply(unique(data_cleaned$Quarter), function(q) {\n             list(\n               label = q,\n               method = \"restyle\",\n               args = list(\"transforms[0].value\", q)  \n             )\n           })\n         )))\n\n\n\n\nP3_interactive\n\n\n\n\n\n\n\nThe updated interactive scatter plot enhances data analysis capabilities significantly by incorporating dropdown menus for category-based filtering, such as transaction types (New Sale, Resale, Sub Sale). This feature allows users to segment the dataset on the fly, enabling a focused examination of trends and patterns specific to each category. Such granularity is invaluable for users needing to make nuanced assessments of market dynamics. Furthermore, the plot’s clear presentation even in high-density areas ensures that all data points are easily visible and distinguishable, avoiding any visual confusion and facilitating precise analysis. Enhanced interactivity, provided by the dropdown filters, improves the user experience by allowing dynamic and complex data segmentation within the visualization interface itself. This makes the plot a highly effective tool for stakeholders requiring a comprehensive and detailed view of various market conditions without the need for additional tools or programming efforts.\n\n\n\n\n\n\n\n\nURA releases flash estimate of 1st Quarter 2024 private residential property price index\nUnsold private housing stock on the rise ahead of ramp-up in new launches in 2024\nHDB resale prices rise 1.7%; private home prices up 1.5% in first quarter: Flash estimates"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-started",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "First import the packages used for the original analysis and the packages required for the new analysis.\n\npacman::p_load(dplyr, purrr, readr, ggiraph,\n               ggplot2, lubridate, ggrepel,\n               patchwork, ggthemes, hrbrthemes, tidyverse, plotly, readr)\n\n\n\n\n\ndata1 = read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata2 = read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata3 = read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata4 = read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata5 = read_csv(\"data/ResidentialTransaction20240414220633.csv\")\ncombined_data &lt;- bind_rows(data1, data2, data3, data4, data5)\n\nglimpse(combined_data)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nClean and process data\n\nlibrary(dplyr)\nlibrary(lubridate)\n\ndata_cleaned &lt;- combined_data %&gt;%\n  mutate(`Sale Date` = dmy(`Sale Date`)) %&gt;%\n  mutate(`Area (SQM)` = as.numeric(gsub(\",\", \"\", `Area (SQM)`))) %&gt;%\n  mutate(`Unit Price ($ PSM)` = as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", `Unit Price ($ PSM)`)))) %&gt;%\n  mutate(`Area (SQM)` = ifelse(is.na(`Area (SQM)`), 0, `Area (SQM)`)) %&gt;%\n  mutate(Area_Category = cut(\n    `Area (SQM)`,\n    breaks = c(0, 100, 200, 300, 400, Inf),\n    labels = c(\"&lt;100\", \"100-200\", \"200-300\", \"300-400\", \"&gt;400\"),\n    include.lowest = TRUE\n  ))\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(Quarter = paste(year(`Sale Date`), \n                         ifelse(month(`Sale Date`) %in% c(1, 2, 3), \"Q1\",\n                                ifelse(month(`Sale Date`) %in% c(4, 5, 6), \"Q2\",\n                                       ifelse(month(`Sale Date`) %in% c(7, 8, 9), \"Q3\", \"Q4\"))), sep = \"-\"))\n\nstr(data_cleaned)\n\ntibble [26,806 × 23] (S3: tbl_df/tbl/data.frame)\n $ Project Name               : chr [1:26806] \"THE REEF AT KING'S DOCK\" \"URBAN TREASURES\" \"NORTH GAIA\" \"NORTH GAIA\" ...\n $ Transacted Price ($)       : num [1:26806] 2317000 1823500 1421112 1258112 1280000 ...\n $ Area (SQFT)                : num [1:26806] 883 883 1076 1033 872 ...\n $ Unit Price ($ PSF)         : num [1:26806] 2625 2066 1320 1218 1468 ...\n $ Sale Date                  : Date[1:26806], format: \"2023-01-01\" \"2023-01-02\" ...\n $ Address                    : chr [1:26806] \"12 HARBOURFRONT AVENUE #05-32\" \"205 JALAN EUNOS #08-02\" \"29 YISHUN CLOSE #08-10\" \"45 YISHUN CLOSE #07-42\" ...\n $ Type of Sale               : chr [1:26806] \"New Sale\" \"New Sale\" \"New Sale\" \"New Sale\" ...\n $ Type of Area               : chr [1:26806] \"Strata\" \"Strata\" \"Strata\" \"Strata\" ...\n $ Area (SQM)                 : num [1:26806] 82 82 100 96 81 ...\n $ Unit Price ($ PSM)         : num [1:26806] 28256 22238 14211 13105 15802 ...\n $ Nett Price($)              : chr [1:26806] \"-\" \"-\" \"-\" \"-\" ...\n $ Property Type              : chr [1:26806] \"Condominium\" \"Condominium\" \"Executive Condominium\" \"Executive Condominium\" ...\n $ Number of Units            : num [1:26806] 1 1 1 1 1 1 1 1 1 1 ...\n $ Tenure                     : chr [1:26806] \"99 yrs from 12/01/2021\" \"Freehold\" \"99 yrs from 15/02/2021\" \"99 yrs from 15/02/2021\" ...\n $ Completion Date            : chr [1:26806] \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" ...\n $ Purchaser Address Indicator: chr [1:26806] \"HDB\" \"Private\" \"HDB\" \"HDB\" ...\n $ Postal Code                : chr [1:26806] \"097996\" \"419535\" \"269343\" \"269294\" ...\n $ Postal District            : chr [1:26806] \"04\" \"14\" \"27\" \"27\" ...\n $ Postal Sector              : chr [1:26806] \"09\" \"41\" \"26\" \"26\" ...\n $ Planning Region            : chr [1:26806] \"Central Region\" \"East Region\" \"North Region\" \"North Region\" ...\n $ Planning Area              : chr [1:26806] \"Bukit Merah\" \"Bedok\" \"Yishun\" \"Yishun\" ...\n $ Area_Category              : Factor w/ 5 levels \"&lt;100\",\"100-200\",..: 1 1 1 1 1 4 5 2 1 2 ...\n $ Quarter                    : chr [1:26806] \"2023-Q1\" \"2023-Q1\" \"2023-Q1\" \"2023-Q1\" ...\n\n\nValidate data according to original methods\n::: panel-tabset ## Code\n\nduplicate &lt;- combined_data %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#result",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#result",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "duplicate\n\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name &lt;chr&gt;, Transacted Price ($) &lt;dbl&gt;,\n#   Area (SQFT) &lt;dbl&gt;, Unit Price ($ PSF) &lt;dbl&gt;, Sale Date &lt;chr&gt;,\n#   Address &lt;chr&gt;, Type of Sale &lt;chr&gt;, Type of Area &lt;chr&gt;, Area (SQM) &lt;dbl&gt;,\n#   Unit Price ($ PSM) &lt;dbl&gt;, Nett Price($) &lt;chr&gt;, Property Type &lt;chr&gt;,\n#   Number of Units &lt;dbl&gt;, Tenure &lt;chr&gt;, Completion Date &lt;chr&gt;,\n#   Purchaser Address Indicator &lt;chr&gt;, Postal Code &lt;chr&gt;,\n#   Postal District &lt;chr&gt;, Postal Sector &lt;chr&gt;, Planning Region &lt;chr&gt;, …\n\n\n::: panel-tabset ## Code\n\nF1 &lt;- ggplot(combined_data, aes(x = `Property Type`)) + \n    geom_bar_interactive(aes(fill = `Planning Region`), position = \"dodge\") +  \n    labs(x = \"Property Type\", y = \"Frequency\",\n         title = \"Frequency of Property Types by Planning Region\") +\n    facet_wrap(~ `Planning Region`, scales = \"free\") +\n    theme_stata(base_size = 2.5)\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\nList of 1\n $ axis.text.x:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : num 45\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plot",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#plot",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "F1"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataviz-makeover",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataviz-makeover",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "The absence of data from the previous year’s four quarters in the scatter plot analyzing the relationship between transacted prices and area poses certain challenges. Primarily, it limits the depth of market trend analysis over an extended period, potentially overlooking seasonal fluctuations and economic cycles that significantly influence real estate markets. Without this broader temporal context, the analysis might give undue emphasis to short-term variations or isolated events, potentially leading to a somewhat narrow perspective on market dynamics. Such a limitation curtails the capacity to observe and interpret long-term trends and the cyclical nature of the housing market, which are essential for comprehensive statistical analysis and forecasting.\nFurthermore, the lack of previous year data restricts year-over-year comparative analysis, crucial for evaluating market condition changes and understanding the influence of external economic factors like interest rate shifts or broader economic changes. For investors and policymakers, the unavailability of a more extended data range may hinder informed strategic decision-making. It limits the development of predictive models that rely on historical data to accurately project future market behaviors, thereby subtly reducing the analysis’s overall utility in supporting nuanced business and investment decisions.\nTo address the challenges of a limited temporal analysis, I have enhanced the dataset by incorporating data from the previous year and categorizing it by quarters. This addition allows for a more nuanced exploration of the changes and trends over time. By analyzing the data on a quarterly basis, we can better understand the seasonal fluctuations and the impact of economic cycles on the real estate market.\n\nCodePlotConclusion\n\n\n\nlibrary(plotly)\n\nP3_interactive &lt;- plot_ly(data = data_cleaned, x = ~`Area (SQFT)`, y = ~`Transacted Price ($)`, type = 'scatter', mode = 'markers',\n                          hoverinfo = 'text',\n                          transforms = list(\n                            list(\n                              type = 'filter',\n                              target = ~Quarter,\n                              operation = '=',\n                              value = unique(data_cleaned$Quarter)[1]  \n                            )\n                          ),\n                          text = ~paste(\"Price: \", `Transacted Price ($)`, \"&lt;br&gt;Area: \", `Area (SQFT)`, \"&lt;br&gt;Quarter: \", Quarter)) %&gt;%\n  layout(title = 'Scatter Plot of Transacted Price vs. Area',\n         xaxis = list(title = 'Area (SQFT)'),\n         yaxis = list(title = 'Transacted Price ($)'),\n         sliders = list(list(\n           active = 0,\n           currentvalue = list(prefix = \"Quarter: \"),\n           steps = lapply(unique(data_cleaned$Quarter), function(q) {\n             list(label = q, method = \"restyle\", args = list(\"transforms[0].value\", q))\n           })\n         )))\n\n\n\n\nP3_interactive\n\n\n\n\n\n\n\nThe interactive scatter plot offers several advantages over the static scatter plot with a trend line, particularly in terms of user engagement and analytical depth. Firstly, its interactivity enhances user experience by allowing for the exploration of individual data points through tooltips and dynamic elements such as sliders for temporal data filtering. This interactivity not only makes the data more accessible but also enables users to perform on-the-fly analysis of specific time periods without the need to switch between different plots. Moreover, the ability to zoom in and navigate through dense clusters of data points helps in examining detailed patterns that might be obscured in a static plot. This dynamic functionality is especially valuable in digital platforms where users expect an interactive and engaging data visualization experience.\n\n\n\n\n\n\nFailing to categorize data by “Type of Sale” in an analysis of real estate transactions introduces significant limitations that can obscure crucial insights into different market segments. Without this categorization, the analysis merges various types of transactions, such as new sales, resales, and sub-sales, into a single aggregated dataset. This aggregation can lead to a generalized overview that fails to capture the distinct behaviors and trends associated with each sale type.\nFirstly, different sale types often exhibit unique pricing patterns, demand cycles, and buyer preferences. For instance, new sales might be influenced by developer promotions and economic incentives, while resales are impacted more by the existing housing market conditions. Sub-sales, involving properties sold before their construction completion, might fluctuate based on speculative market sentiments. Without distinguishing these types, strategic decision-making becomes challenging as the nuanced dynamics of the market are not adequately represented.\nMoreover, policies and marketing strategies tailored to specific sale types cannot be effectively formulated or implemented without a clear understanding of the particular characteristics and needs of each segment. For example, marketing strategies that are effective for new developments might not work for resales. Therefore, by not categorizing data by “Type of Sale,” the analysis loses the potential to guide targeted interventions and optimize resource allocation, potentially leading to less effective strategies and missed opportunities in the market.\nTo enhance our analysis, I’ve processed the data to categorize it by different “Type of Sale.” This categorization allows us to delve into the specific characteristics and trends of new sales, resales, and sub-sales separately.\n\nCodePlotConclusion\n\n\n\nlibrary(plotly)\n\nP3_interactive &lt;- plot_ly(data = data_cleaned, x = ~`Area (SQFT)`, y = ~`Transacted Price ($)`, type = 'scatter', mode = 'markers',\n                          hoverinfo = 'text',\n                          transforms = list(\n                            list(\n                              type = 'filter',\n                              target = ~Quarter,\n                              operation = '=',\n                              value = unique(data_cleaned$Quarter)[1] \n                            ),\n                            list(\n                              type = 'filter',\n                              target = ~`Type of Sale`,\n                              operation = '=',\n                              value = unique(data_cleaned$`Type of Sale`)[1] \n                            )\n                          ),\n                          text = ~paste(\"Price: \", `Transacted Price ($)`, \"&lt;br&gt;Area: \", `Area (SQFT)`, \"&lt;br&gt;Quarter: \", Quarter, \"&lt;br&gt;Type of Sale: \", `Type of Sale`)) %&gt;%\n  layout(title = 'Scatter Plot of Transacted Price vs. Area',\n         xaxis = list(title = 'Area (SQFT)'),\n         yaxis = list(title = 'Transacted Price ($)'),\n         updatemenus = list(\n           list(\n             type = \"dropdown\",\n             direction = \"down\",\n             showactive = TRUE,\n             buttons = lapply(unique(data_cleaned$`Type of Sale`), function(type) {\n               list(\n                 method = \"restyle\",\n                 args = list(\"transforms[1].value\", type),\n                 label = type\n               )\n             })\n           )\n         ),\n         sliders = list(list(\n           active = 0,\n           currentvalue = list(prefix = \"Quarter: \"),\n           steps = lapply(unique(data_cleaned$Quarter), function(q) {\n             list(\n               label = q,\n               method = \"restyle\",\n               args = list(\"transforms[0].value\", q)  \n             )\n           })\n         )))\n\n\n\n\nP3_interactive\n\n\n\n\n\n\n\nThe updated interactive scatter plot enhances data analysis capabilities significantly by incorporating dropdown menus for category-based filtering, such as transaction types (New Sale, Resale, Sub Sale). This feature allows users to segment the dataset on the fly, enabling a focused examination of trends and patterns specific to each category. Such granularity is invaluable for users needing to make nuanced assessments of market dynamics. Furthermore, the plot’s clear presentation even in high-density areas ensures that all data points are easily visible and distinguishable, avoiding any visual confusion and facilitating precise analysis. Enhanced interactivity, provided by the dropdown filters, improves the user experience by allowing dynamic and complex data segmentation within the visualization interface itself. This makes the plot a highly effective tool for stakeholders requiring a comprehensive and detailed view of various market conditions without the need for additional tools or programming efforts."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex03/Hands-on_EX03.html",
    "href": "Hand-on_EX/Hand-on-Ex03/Hands-on_EX03.html",
    "title": "Hand-on EX03",
    "section": "",
    "text": "3.1 Learning Outcome In this hands-on exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages.\n3.2 Getting Started First, write a code chunk to check, install and launch the following R packages:\nggiraph for making ‘ggplot’ graphics interactive. plotly, R library for plotting interactive statistical graphs. DT provides an R interface to the JavaScript library DataTables that create interactive table on html page. tidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs. patchwork for combining multiple ggplot2 graphs into one figure. The code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n3.3 Importing Data In this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n3.4 Interactive Data Visualisation - ggiraph methods ggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements. Onclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked. Data_id: a column of data-sets that contain an id to be associated with elements. If it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n3.4.1 Tooltip effect with tooltip aesthetic Below shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n3.5 Interactivity 3.5.1 Displaying multiple information on tooltip\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n3.6 Interactivity 3.6.1 Customising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n3.6.2 Displaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n3.6.3 Hover effect with data_id aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n3.6.4 Styling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n3.6.5 Combining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n3.6.6 Click effect with onclick\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n3.6.7 Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n3.7 Interactive Data Visualisation - plotly methods! 3.7.1 Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n3.7.2 Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n3.7.4 Coordinated Multiple Views with plotly\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n3.8 Interactive Data Visualisation - crosstalk methods! Crosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n3.8.1 Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n3.8.2 Linked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.9 Reference 3.9.1 ggiraph This link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\nHow to Plot With Ggiraph Interactive map of France with ggiraph Custom interactive sunbursts with ggplot in R This link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists. 3.9.2 plotly for R Getting Started with Plotly in R A collection of plotly R graphs are available via this link. Carson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link Plotly R Figure Reference provides a comprehensive discussion of each visual representations. Plotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API. Getting Started Visit this link for a very interesting implementation of gganimate by your senior. Building an animation step-by-step with gganimate. Creating a composite gif with multiple gganimate panels\n4 Programming Animated Statistical Graphics with R\n4.1 Overview When telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this hands-on exercise, you will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, you will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\n4.1.1 Basic concepts of animation When creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n4.1.2 Terminology Before we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\nTip Before you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts.\n4.2 Getting Started 4.2.1 Loading the R packages First, write a code chunk to check, install and load the following R packages:\nplotly, R library for plotting interactive statistical graphs. gganimate, an ggplot extension for creating animated statistical graphs. gifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame. gapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme. tidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n4.2.2 Importing the data In this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n4.3 Animated Data Visualisation: gganimate methods gganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\ntransition_() defines how the data should be spread out and how it relates to itself across time. view_() defines how the positional scales should change along the animation. shadow_() defines how data from other points in time should be presented in the given point in time. enter_()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation. ease_aes() defines how different aesthetics should be eased during transitions. 4.3.1 Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n4.3.2 Building the animated bubble plot In the code chunk below,\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year). ease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\n4.4 Animated Data Visualisation: plotly In Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n4.4.1 Building an animated bubble plot: ggplotly() method In this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n4.4.2 Building an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\n\n\n\n\n4.5 Reference Getting Started Visit this link for a very interesting implementation of gganimate by your senior. Building an animation step-by-step with gganimate. Creating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html",
    "href": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html",
    "title": "Hand-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse package are installed in the compute. if the are, then they will be lauched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 650 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): ID, CLASS, GENDER, RACE, ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#install-and-launching-r-packages",
    "href": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#install-and-launching-r-packages",
    "title": "Hand-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse package are installed in the compute. if the are, then they will be lauched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#importing-the-data",
    "href": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#importing-the-data",
    "title": "Hand-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 650 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): ID, CLASS, GENDER, RACE, ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#r-graphics-vs-ggplot",
    "href": "Hand-on_EX/Hand-on-Ex01/Hands-on_EX01.html#r-graphics-vs-ggplot",
    "title": "Hand-on Exercise 1",
    "section": "R Graphics VS ggplot",
    "text": "R Graphics VS ggplot\n\nexam_data$MATHS &lt;- as.numeric(as.character(exam_data$MATHS))\n\nWarning: NAs introduced by coercion\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\nWarning: Removed 6 rows containing non-finite outside the scale range\n(`stat_bin()`)."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html",
    "title": "Hand-on_EX02",
    "section": "",
    "text": "In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package, create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages, plot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#installing-and-loading-the-required-libraries",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#installing-and-loading-the-required-libraries",
    "title": "Hand-on_EX02",
    "section": "2.2.1 Installing and loading the required libraries",
    "text": "2.2.1 Installing and loading the required libraries\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#importing-data",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#importing-data",
    "title": "Hand-on_EX02",
    "section": "2.2.2 Importing data",
    "text": "2.2.2 Importing data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n2.3 Beyond ggplot2 Annotation: ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-ggrepel",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-ggrepel",
    "title": "Hand-on_EX02",
    "section": "2.3.1 Working with ggrepel",
    "text": "2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-ggtheme-package",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-ggtheme-package",
    "title": "Hand-on_EX02",
    "section": "2.4.1 Working with ggtheme package",
    "text": "2.4.1 Working with ggtheme package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-hrbthems-package",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#working-with-hrbthems-package",
    "title": "Hand-on_EX02",
    "section": "2.4.2 Working with hrbthems package",
    "text": "2.4.2 Working with hrbthems package\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#beyond-single-graph",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#beyond-single-graph",
    "title": "Hand-on_EX02",
    "section": "2.5 Beyond Single Graph",
    "text": "2.5 Beyond Single Graph\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\nprint(p1)\n\n\n\n\nNext\n\nprint(class(exam_data$ENGLISH))\n\n[1] \"character\"\n\nif(is.factor(exam_data$ENGLISH) || is.character(exam_data$ENGLISH)) {\n  exam_data$ENGLISH &lt;- as.numeric(as.character(exam_data$ENGLISH))\n}\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  coord_cartesian(xlim=c(0, 100)) +\n  ggtitle(\"Distribution of English scores\")\nprint(p2)\n\n\n\n\nLastly, we will draw a scatterplot for English score versus Maths score by as shown below\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\nprint(p3)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hand-on_EX02",
    "section": "2.5.1 Creating Composite Graphics: pathwork methods",
    "text": "2.5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\nTwo-Column Layout using the Plus Sign +. Parenthesis () to create a subplot group. Two-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#combining-two-ggplot2-graphs",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#combining-two-ggplot2-graphs",
    "title": "Hand-on_EX02",
    "section": "2.5.2 Combining two ggplot2 graphs",
    "text": "2.5.2 Combining two ggplot2 graphs\n\np1 + p2"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#combining-three-ggplot2-graphs",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#combining-three-ggplot2-graphs",
    "title": "Hand-on_EX02",
    "section": "2.5.3 Combining three ggplot2 graphs",
    "text": "2.5.3 Combining three ggplot2 graphs\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-a-composite-figure-with-tag",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-a-composite-figure-with-tag",
    "title": "Hand-on_EX02",
    "section": "2.5.4 Creating a composite figure with tag",
    "text": "2.5.4 Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-figure-with-insert",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-figure-with-insert",
    "title": "Hand-on_EX02",
    "section": "2.5.5 Creating figure with insert",
    "text": "2.5.5 Creating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hand-on_EX/Hand-on-Ex02/Hands-on_EX02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hand-on_EX02",
    "section": "2.5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "2.5.6 Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse, rstantools, see)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n \nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n\n\n\n\n\n\n\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\n\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\n\n\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\nplot(check_h)\n\n\n\n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\nplot(parameters(model1))\n\n\n\n\n\n\n\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot, tidyverse, rstantools, see)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#one-sample-test-gghistostats-method",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "set.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "ggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "ggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "ggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "exam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n \nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#multiple-regression-model-using-lm",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "model &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "check_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "model1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "check_h &lt;- check_heteroscedasticity(model1)\n\nplot(check_h)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#model-diagnostic-complete-check",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "check_model(model1)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "plot(parameters(model1))"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "ggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-loading-the-packages",
    "title": "Hands-on_Ex04",
    "section": "Installing and loading the packages",
    "text": "Installing and loading the packages\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#data-import",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#data-import",
    "title": "Hands-on_Ex04",
    "section": "Data import",
    "text": "Data import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on_Ex04",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Plotting standard error bars of point estimates",
    "text": "Plotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Plotting confidence interval of point estimates",
    "text": "Plotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on_Ex04",
    "section": "Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "Visualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on_Ex04",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on_Ex04",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on_Ex04",
    "section": "Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "Visualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#installing-and-launching-r-packages-1",
    "title": "Hands-on_Ex04",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#importing-data",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#importing-data",
    "title": "Hands-on_Ex04",
    "section": "Importing Data",
    "text": "Importing Data\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on_Ex04",
    "section": "FunnelPlotR methods: The basic plot",
    "text": "FunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#computing-the-basic-derived-fields",
    "title": "Hands-on_Ex04",
    "section": "Computing the basic derived fields",
    "text": "Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on_Ex04",
    "section": "Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#plotting-a-static-funnel-plot",
    "title": "Hands-on_Ex04",
    "section": "Plotting a static funnel plot",
    "text": "Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hand-on_EX/Hand-on-Ex04/Hands-on_Ex04.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on_Ex04",
    "section": "Interactive Funnel Plot: plotly + ggplot2",
    "text": "Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-class_EX/In-class_EX02/In-class EX02.html",
    "href": "In-class_EX/In-class_EX02/In-class EX02.html",
    "title": "In-class EX02",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n# Ensure that the 'ENGLISH' column is numeric\nexam$ENGLISH &lt;- as.numeric(as.character(exam$ENGLISH))\n\n# Check if there are any NAs introduced by the conversion, which would indicate non-numeric values in the original column\nsum(is.na(exam$ENGLISH))\n\n[1] 6\n\n# If NAs are present, they must be addressed before plotting\n# For instance, you can remove the rows with NA values\nexam &lt;- exam[!is.na(exam$ENGLISH), ]\n\n# Now try the plot again\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "In-class_EX/In-class_EX01/In-class EX01.html",
    "href": "In-class_EX/In-class_EX01/In-class EX01.html",
    "title": "In-class Ex01",
    "section": "",
    "text": "In the code chunk below, ‘p_load()’ of pacman package is used to load tidyverse family of package\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read.csv(\"data/realis2019.csv\")\nhead(realis, 10)\n\n               Project.Name                        Address No..of.Units\n1               PEIRCE VIEW 557 Upper Thomson Road  #02-12            1\n2              FLORIDA PARK               54 Sunrise Drive            1\n3              BULLION PARK        164 Lentor Loop  #03-02            1\n4              CASTLE GREEN  483 Yio Chu Kang Road  #07-03            1\n5              HAPPY ESTATE             36 Thomson Heights            1\n6  TEACHER'S HOUSING ESTATE              148 Tagore Avenue            1\n7              THE PANORAMA 20 Ang Mo Kio Avenue 2  #05-40            1\n8              THE PANORAMA 16 Ang Mo Kio Avenue 2  #12-20            1\n9          CHIP THYE GARDEN         8 Yio Chu Kang Gardens            1\n10 TEACHER'S HOUSING ESTATE             16 Kalidasa Avenue            1\n   Area..sqm. Type.of.Area Transacted.Price.... Nett.Price...\n1         113       Strata               840000             -\n2         312         Land              3040000             -\n3          75       Strata               860000             -\n4         107       Strata              1000000             -\n5         687         Land              7000000             -\n6         228         Land              2880000             -\n7          94       Strata              1510000             -\n8          42       Strata               710000             -\n9         207         Land              2800000             -\n10        232         Land              2300000             -\n   Unit.Price....psm. Unit.Price....psf. Sale.Date       Property.Type\n1                7434                691 10-Jan-19         Condominium\n2                9737                905 10-Jan-19 Semi-Detached House\n3               11467               1065  8-Jan-19         Condominium\n4                9346                868  3-Jan-19         Condominium\n5               10183                946  2-Jan-19 Semi-Detached House\n6               12659               1176 11-Feb-19       Terrace House\n7               16064               1492  8-Feb-19         Condominium\n8               16905               1570  8-Feb-19         Condominium\n9               13500               1254  8-Feb-19       Terrace House\n10               9935                923  8-Feb-19       Terrace House\n                    Tenure Completion.Date Type.of.Sale\n1                 Freehold            1996       Resale\n2                 Freehold            1989       Resale\n3                 Freehold            1993       Resale\n4   99 Yrs From 01/12/1993            1997       Resale\n5                 Freehold            1984       Resale\n6  999 Yrs From 02/12/1885         Unknown       Resale\n7   99 Yrs From 08/04/2013            2017       Resale\n8   99 Yrs From 08/04/2013            2017       Resale\n9                 Freehold            1981       Resale\n10 999 Yrs From 02/12/1885         Unknown       Resale\n   Purchaser.Address.Indicator Postal.District Postal.Sector Postal.Code\n1                      Private              20            57      574418\n2                      Private              28            80      806557\n3                      Private              26            78      789096\n4                      Private              26            78      787057\n5                      Private              20            57      574861\n6                      Private              26            78      787738\n7                          HDB              20            56      567701\n8                      Private              20            56      567699\n9                          HDB              20            56      568058\n10                     Private              26            78      789395\n     Planning.Region Planning.Area\n1  North East Region    Ang Mo Kio\n2  North East Region    Ang Mo Kio\n3  North East Region    Ang Mo Kio\n4  North East Region    Ang Mo Kio\n5  North East Region    Ang Mo Kio\n6  North East Region    Ang Mo Kio\n7  North East Region    Ang Mo Kio\n8  North East Region    Ang Mo Kio\n9  North East Region    Ang Mo Kio\n10 North East Region    Ang Mo Kio\n\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis,\n       aes(x = 'Unit price($ psm)'))"
  },
  {
    "objectID": "In-class_EX/In-class_EX01/In-class EX01.html#loading-r-package",
    "href": "In-class_EX/In-class_EX01/In-class EX01.html#loading-r-package",
    "title": "In-class Ex01",
    "section": "",
    "text": "In the code chunk below, ‘p_load()’ of pacman package is used to load tidyverse family of package\n\npacman::p_load(tidyverse)\n\n\nrealis &lt;-read.csv(\"data/realis2019.csv\")\nhead(realis, 10)\n\n               Project.Name                        Address No..of.Units\n1               PEIRCE VIEW 557 Upper Thomson Road  #02-12            1\n2              FLORIDA PARK               54 Sunrise Drive            1\n3              BULLION PARK        164 Lentor Loop  #03-02            1\n4              CASTLE GREEN  483 Yio Chu Kang Road  #07-03            1\n5              HAPPY ESTATE             36 Thomson Heights            1\n6  TEACHER'S HOUSING ESTATE              148 Tagore Avenue            1\n7              THE PANORAMA 20 Ang Mo Kio Avenue 2  #05-40            1\n8              THE PANORAMA 16 Ang Mo Kio Avenue 2  #12-20            1\n9          CHIP THYE GARDEN         8 Yio Chu Kang Gardens            1\n10 TEACHER'S HOUSING ESTATE             16 Kalidasa Avenue            1\n   Area..sqm. Type.of.Area Transacted.Price.... Nett.Price...\n1         113       Strata               840000             -\n2         312         Land              3040000             -\n3          75       Strata               860000             -\n4         107       Strata              1000000             -\n5         687         Land              7000000             -\n6         228         Land              2880000             -\n7          94       Strata              1510000             -\n8          42       Strata               710000             -\n9         207         Land              2800000             -\n10        232         Land              2300000             -\n   Unit.Price....psm. Unit.Price....psf. Sale.Date       Property.Type\n1                7434                691 10-Jan-19         Condominium\n2                9737                905 10-Jan-19 Semi-Detached House\n3               11467               1065  8-Jan-19         Condominium\n4                9346                868  3-Jan-19         Condominium\n5               10183                946  2-Jan-19 Semi-Detached House\n6               12659               1176 11-Feb-19       Terrace House\n7               16064               1492  8-Feb-19         Condominium\n8               16905               1570  8-Feb-19         Condominium\n9               13500               1254  8-Feb-19       Terrace House\n10               9935                923  8-Feb-19       Terrace House\n                    Tenure Completion.Date Type.of.Sale\n1                 Freehold            1996       Resale\n2                 Freehold            1989       Resale\n3                 Freehold            1993       Resale\n4   99 Yrs From 01/12/1993            1997       Resale\n5                 Freehold            1984       Resale\n6  999 Yrs From 02/12/1885         Unknown       Resale\n7   99 Yrs From 08/04/2013            2017       Resale\n8   99 Yrs From 08/04/2013            2017       Resale\n9                 Freehold            1981       Resale\n10 999 Yrs From 02/12/1885         Unknown       Resale\n   Purchaser.Address.Indicator Postal.District Postal.Sector Postal.Code\n1                      Private              20            57      574418\n2                      Private              28            80      806557\n3                      Private              26            78      789096\n4                      Private              26            78      787057\n5                      Private              20            57      574861\n6                      Private              26            78      787738\n7                          HDB              20            56      567701\n8                      Private              20            56      567699\n9                          HDB              20            56      568058\n10                     Private              26            78      789395\n     Planning.Region Planning.Area\n1  North East Region    Ang Mo Kio\n2  North East Region    Ang Mo Kio\n3  North East Region    Ang Mo Kio\n4  North East Region    Ang Mo Kio\n5  North East Region    Ang Mo Kio\n6  North East Region    Ang Mo Kio\n7  North East Region    Ang Mo Kio\n8  North East Region    Ang Mo Kio\n9  North East Region    Ang Mo Kio\n10 North East Region    Ang Mo Kio\n\n\n\nrealis &lt;-read_csv(\"data/realis2019.csv\")\n\n\nggplot(data = realis,\n       aes(x = 'Unit price($ psm)'))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S$14,000. For families with monthly household income more than S$14,000, they need to turn to the private residential market.\n\n\n\nTo accomplish the task, transaction data of REALIS will be used. A complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024 have been downloaded via SMU e-library database service.\n\n\n\nAssuming the role of a graphical editor of a median company, we prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n\n\n\n\n\ntidyverse (i.e. readr, tidyr, dplyr, ggplot2) :for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics;\nlubridate: Simplifies the handling of dates and times in R by providing tools to parse, manipulate, and calculate with date-time objects more intuitively.\npatchwork: An extension for ggplot2 that enables the easy assembly of multiple plots to produce a composite plot that can reveal complex insights into data.\nzoo: Provides powerful methods for managing and manipulating ordered indexed data, particularly time series data, making it easier to handle a variety of data irregularities.\n\npacman::p_load(tidyverse, lubridate, patchwork, zoo)\n\n\n\n\n\n\n\n\n\n\n\nCategory\nDescription\n\n\n\n\nProject Name\nthe name of the property or title of the development project that is being sold\n\n\nSale Date\nThe specific date when the transaction was completed\n\n\nType of Sale\nA new sale, resale, or auction, among other types.Here mainly analyze resale\n\n\nArea (SQM)\nThe usable floor area of the property in square meters\n\n\nUnit Price ($ PSM)\nThe price per square meter of the property\n\n\n\n\n\n\n\n\n\nEach read_csv() function loads data from a CSV file into R, creating five separate data frames: data1, data2, data3, data4, and data5. 2.Data Consolidation:\nbind_rows() from the dplyr package merges these five data frames into one large data frame called data. This function stacks the data frames vertically, allowing for an analysis across all data combined. 3.Data Inspection:\nglimpse() provides a quick overview of the combined data frame, showing types of data and a preview of the first few entries in each column, helping to quickly assess the data’s structure and readiness for analysis.\n\ndata1 = read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata2 = read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata3 = read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata4 = read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata5 = read_csv(\"data/ResidentialTransaction20240414220633.csv\")\ndata &lt;- bind_rows(data1, data2, data3, data4, data5)\n\nglimpse(data)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nSale Date is converted to a date format using the dmy() function from the lubridate package, which interprets strings as dates in “day-month-year” format.\nArea (SQM). is transformed into a numeric variable. First, any commas are removed with gsub(“,”, ““, Area (SQM).), then the result is coerced to numeric with as.numeric().\nUnit Price ($ PSM). undergoes a similar process as Area (SQM).; however, it also removes the dollar sign ($) before removing commas and converting to numeric.\nAny NA (missing) values in Area (SQM). are replaced with 0 using ifelse(is.na(Area (SQM).), 0, Area (SQM).).\nA new variable Area_Category is created using the cut() function to categorize the Area (SQM). variable into predefined bins: &lt;100, 100-200, 200-300, 300-400, &gt;400.\nThe breaks argument specifies the boundaries for these bins, and labels provides the corresponding category labels.\ninclude.lowest = TRUE ensures that values equal to the lowest break point (0) are included in the first category (&lt;100).\n\ndata_cleaned &lt;- data %&gt;%\n  mutate(\n    `Sale Date` = dmy(`Sale Date`),  # Ensuring we're using the exact column name from the dataset\n    `Area (SQM)` = as.numeric(gsub(\",\", \"\", `Area (SQM)`)),  # Keeping the variable names as they are in the dataset\n    `Unit Price ($ PSM)` = as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", `Unit Price ($ PSM)`)))  # Properly referencing the variable\n  )\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(\n    `Area (SQM)` = ifelse(is.na(`Area (SQM)`), 0, `Area (SQM)`)  # Dealing with NA values\n  )\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(\n    Area_Category = cut(\n      `Area (SQM)`,\n      breaks = c(0, 100, 200, 300, 400, Inf),  \n      labels = c(\"&lt;100\", \"100-200\", \"200-300\", \"300-400\", \"&gt;400\"),\n      include.lowest = TRUE  \n    )\n  )\n\n\n\n\n\nThe visualizations specifically highlight resale data within Singapore’s private residential market for the first quarter of 2024. This focus on resale properties is crucial as it offers a snapshot of the market’s secondary transactions, reflecting ongoing demand and providing a real-world gauge of property values after the initial purchase. Resale data represents an essential segment of the housing market, often characterized by immediate habitability and established neighborhoods, crucial factors for many homebuyers and investors in making informed decisions.\n\n\nSale Date:\nThe Sale Date variable is crucial in housing price analysis for monitoring temporal patterns. It allows analysts to track how prices change over time, revealing trends that may correspond to economic conditions, interest rates, or seasonal fluctuations. By examining the Sale Date, one can also discern if there are particular times of the year when the market peaks or dips, which can be invaluable for both buyers looking for the best deal and sellers aiming for the optimal listing period.\nArea and Unit Price:\nOn the other hand, Area (SQM). and Unit Price ($ PSM). provide spatial and valuation metrics, respectively. The area of a property, often measured in square meters, directly influences its utility and potential for future modifications, affecting its market value. The unit price per square meter standardizes property values, making it possible to compare homes of different sizes and locations fairly. This metric is essential to understand what drives value in the housing market and to identify whether buyers are getting a reasonable price for the area they are purchasing in.\n\nCodePlotConclusion\n\n\n\nresale_data &lt;- data_cleaned %&gt;%\n  filter(`Type of Sale` == \"Resale\") %&gt;%\n  mutate(Quarter = as.yearqtr(`Sale Date`))\n\navg_price_by_quarter_resale &lt;- resale_data %&gt;%\n  group_by(Area_Category, Quarter) %&gt;%\n  summarise(Avg_Unit_Price_PSM = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = \"drop\")\n\np_line_resale &lt;- avg_price_by_quarter_resale %&gt;%\n  ggplot(aes(x = Quarter, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +\n  geom_line() +\n  labs(title = \"Quarterly Average Unit Price ($ PSM) by Area Category for Resale\",\n       x = \"Quarter\",\n       y = \"Average Price ($ PSM)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"none\")\n\np_line_resale_stacked &lt;- p_line_resale + facet_wrap(~Area_Category, ncol = 1, scales = \"free_y\")\n\ndata_q1_resale &lt;- resale_data %&gt;%\n  filter(Quarter == \"2024 Q1\") %&gt;%\n  mutate(Month = floor_date(`Sale Date`, \"month\"))\n\np_box_resale &lt;- ggplot(data_q1_resale, aes(x = Area_Category, y = `Unit Price ($ PSM)`, fill = Area_Category)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.2, alpha = 0.001) +  # Adjusting alpha for visibility\n  facet_wrap(~Month, scales = \"free_y\") +\n  labs(title = \"Monthly Unit Price ($ PSM) by Area Category for Resale (Q1 2024)\",\n       x = \"Area Category\",\n       y = \"Price ($ PSM)\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\np_combined_resale &lt;- p_line_resale_stacked / p_box_resale\n\n\n\n\nprint(p_combined_resale)\n\n\n\n\n\n\nIn the resale housing market, the quarterly average unit price per square meter (PSM) exhibits contrasting trends: smaller properties (&lt;200 SQM) are gaining value, while larger ones (≥300 SQM) show price declines, indicating a shift in consumer preferences toward more compact living spaces. The Q1 2024 box plots reveal a broad price range within each area category, especially in the largest homes, suggesting that factors like location and amenities significantly influence pricing.\n\n\n\n\n\n\nProject Name:\nThe variable Project.Name represents the specific housing development or project. Analyzing data by Project.Name allows for a detailed understanding of the popularity and demand for specific developments. This can highlight developers’ reputation, location desirability, and unique features of individual projects that may influence prices. Trends can emerge, such as certain developers commanding premium prices or projects in specific locations being more sought-after.\nTotal Units and Avg Unit Price PSM:\nTotal_Units and Avg_Unit_Price_PSM are key metrics for assessing supply and value. Total_Units sold provides insight into the scale of a project and its market absorption rate. High sales volumes can indicate high demand or effective pricing strategies, while low volumes may signal overpricing or less desirable attributes. Avg_Unit_Price_PSM (average unit price per square meter) offers a comparative value indicator that normalizes prices across different sizes and types of properties, reflecting the price point at which the market clears. Analyzing this alongside Total_Units can reveal if there’s a relationship between the number of units sold and the price points, potentially guiding future development and pricing strategies.\n\nCodePlotConclusion\n\n\n\nresale_data &lt;- data_cleaned %&gt;%\n  filter(`Type of Sale` == \"Resale\")\n\nproject_stats &lt;- resale_data %&gt;%\n  filter(`Project Name` != \"N.A.\") %&gt;%\n  group_by(`Project Name`) %&gt;%\n  summarise(\n    Total_Units = sum(`Number of Units`, na.rm = TRUE),  # Sum up all units for each project\n    Avg_Unit_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE),  # Calculate the average price per square meter\n    .groups = \"drop\"  # Drop the grouping\n  )\n\ntop_projects &lt;- project_stats %&gt;%\n  top_n(25, Total_Units) %&gt;%\n  arrange(desc(Total_Units))\n\nproject_order &lt;- top_projects$`Project Name`\n\ntop_projects$`Project Name` &lt;- factor(top_projects$`Project Name`, levels = project_order)\nresale_data$`Project Name` &lt;- factor(resale_data$`Project Name`, levels = project_order)\n\np_units &lt;- ggplot(top_projects, aes(x = `Project Name`, y = Total_Units, fill = 'steelblue')) +\n  geom_bar(stat = \"identity\") +\n  labs(y = \"Total Number of Units\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n    legend.position = \"none\"\n  )\n\np_price &lt;- ggplot(resale_data, aes(x = `Project Name`, y = `Unit Price ($ PSM)`)) +\n  geom_boxplot() +\n  labs(y = \"Unit Price ($ PSM)\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n    legend.position = \"none\"\n  )\n\np_combined &lt;- p_units | p_price\n\n\n\n\np_combined\n\n\n\n\n\n\nThe bar chart depicts a significant lead in the total number of units sold by “Sol Acres,” suggesting a high demand or larger inventory. Other projects show a steady decrease in volume, indicating varied market preferences. The box plot showcases consistent unit price ranges within most projects, with notable premiums in “The Sail @ Marina Bay” and “Reflections at Keppel Bay,” likely due to their desirable locations or upscale amenities.\n\n\n\n\n\n\n\nThe data from the first quarter of 2024 shows that “Sol Acres” significantly leads in resale volumes, hinting at its market desirability, possibly due to a balance of affordability and attractive amenities. This project’s success may be a key indicator for those seeking value-for-money investments. In contrast, luxury segments like “The Sail @ Marina Bay” exhibit a wide price range, indicating a market for buyers with a taste for exclusivity and willingness to pay a premium for distinctive features.\nFor Consumers: Buyers should align their choices with their priorities: affordability may lead them to high-volume projects, while unique, high-quality features could draw them towards premium segments. When considering investment, a diversified approach that includes stable, high-volume properties and selective, high-value opportunities may offer balanced returns.\n\n\n\n\nURA releases flash estimate of 1st Quarter 2024 private residential property price index\nUnsold private housing stock on the rise ahead of ramp-up in new launches in 2024\nHDB resale prices rise 1.7%; private home prices up 1.5% in first quarter: Flash estimates"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#overview",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "There are two major residential property market in Singapore, namely public and private housing. Public housing aims to meet the basic need of the general public with monthly household income less than or equal to S$14,000. For families with monthly household income more than S$14,000, they need to turn to the private residential market.\n\n\n\nTo accomplish the task, transaction data of REALIS will be used. A complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024 have been downloaded via SMU e-library database service.\n\n\n\nAssuming the role of a graphical editor of a median company, we prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#getting-start",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "tidyverse (i.e. readr, tidyr, dplyr, ggplot2) :for performing data science tasks such as importing, tidying, and wrangling data, as well as creating graphics based on The Grammar of Graphics;\nlubridate: Simplifies the handling of dates and times in R by providing tools to parse, manipulate, and calculate with date-time objects more intuitively.\npatchwork: An extension for ggplot2 that enables the easy assembly of multiple plots to produce a composite plot that can reveal complex insights into data.\nzoo: Provides powerful methods for managing and manipulating ordered indexed data, particularly time series data, making it easier to handle a variety of data irregularities.\n\npacman::p_load(tidyverse, lubridate, patchwork, zoo)\n\n\n\n\n\n\n\n\n\n\n\nCategory\nDescription\n\n\n\n\nProject Name\nthe name of the property or title of the development project that is being sold\n\n\nSale Date\nThe specific date when the transaction was completed\n\n\nType of Sale\nA new sale, resale, or auction, among other types.Here mainly analyze resale\n\n\nArea (SQM)\nThe usable floor area of the property in square meters\n\n\nUnit Price ($ PSM)\nThe price per square meter of the property"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#data-processing",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Each read_csv() function loads data from a CSV file into R, creating five separate data frames: data1, data2, data3, data4, and data5. 2.Data Consolidation:\nbind_rows() from the dplyr package merges these five data frames into one large data frame called data. This function stacks the data frames vertically, allowing for an analysis across all data combined. 3.Data Inspection:\nglimpse() provides a quick overview of the combined data frame, showing types of data and a preview of the first few entries in each column, helping to quickly assess the data’s structure and readiness for analysis.\n\ndata1 = read_csv(\"data/ResidentialTransaction20240308160536.csv\")\ndata2 = read_csv(\"data/ResidentialTransaction20240308160736.csv\")\ndata3 = read_csv(\"data/ResidentialTransaction20240308161009.csv\")\ndata4 = read_csv(\"data/ResidentialTransaction20240308161109.csv\")\ndata5 = read_csv(\"data/ResidentialTransaction20240414220633.csv\")\ndata &lt;- bind_rows(data1, data2, data3, data4, data5)\n\nglimpse(data)\n\nRows: 26,806\nColumns: 21\n$ `Project Name`                &lt;chr&gt; \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        &lt;dbl&gt; 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 &lt;dbl&gt; 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          &lt;dbl&gt; 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   &lt;chr&gt; \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       &lt;chr&gt; \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                &lt;chr&gt; \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                &lt;chr&gt; \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  &lt;dbl&gt; 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          &lt;dbl&gt; 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               &lt;chr&gt; \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               &lt;chr&gt; \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        &lt;chr&gt; \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             &lt;chr&gt; \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` &lt;chr&gt; \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 &lt;chr&gt; \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             &lt;chr&gt; \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               &lt;chr&gt; \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             &lt;chr&gt; \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               &lt;chr&gt; \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n\n\n\n\n\nSale Date is converted to a date format using the dmy() function from the lubridate package, which interprets strings as dates in “day-month-year” format.\nArea (SQM). is transformed into a numeric variable. First, any commas are removed with gsub(“,”, ““, Area (SQM).), then the result is coerced to numeric with as.numeric().\nUnit Price ($ PSM). undergoes a similar process as Area (SQM).; however, it also removes the dollar sign ($) before removing commas and converting to numeric.\nAny NA (missing) values in Area (SQM). are replaced with 0 using ifelse(is.na(Area (SQM).), 0, Area (SQM).).\nA new variable Area_Category is created using the cut() function to categorize the Area (SQM). variable into predefined bins: &lt;100, 100-200, 200-300, 300-400, &gt;400.\nThe breaks argument specifies the boundaries for these bins, and labels provides the corresponding category labels.\ninclude.lowest = TRUE ensures that values equal to the lowest break point (0) are included in the first category (&lt;100).\n\ndata_cleaned &lt;- data %&gt;%\n  mutate(\n    `Sale Date` = dmy(`Sale Date`),  # Ensuring we're using the exact column name from the dataset\n    `Area (SQM)` = as.numeric(gsub(\",\", \"\", `Area (SQM)`)),  # Keeping the variable names as they are in the dataset\n    `Unit Price ($ PSM)` = as.numeric(gsub(\"\\\\$\", \"\", gsub(\",\", \"\", `Unit Price ($ PSM)`)))  # Properly referencing the variable\n  )\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(\n    `Area (SQM)` = ifelse(is.na(`Area (SQM)`), 0, `Area (SQM)`)  # Dealing with NA values\n  )\n\ndata_cleaned &lt;- data_cleaned %&gt;%\n  mutate(\n    Area_Category = cut(\n      `Area (SQM)`,\n      breaks = c(0, 100, 200, 300, 400, Inf),  \n      labels = c(\"&lt;100\", \"100-200\", \"200-300\", \"300-400\", \"&gt;400\"),\n      include.lowest = TRUE  \n    )\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#exploratory-data-analysis",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#exploratory-data-analysis",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The visualizations specifically highlight resale data within Singapore’s private residential market for the first quarter of 2024. This focus on resale properties is crucial as it offers a snapshot of the market’s secondary transactions, reflecting ongoing demand and providing a real-world gauge of property values after the initial purchase. Resale data represents an essential segment of the housing market, often characterized by immediate habitability and established neighborhoods, crucial factors for many homebuyers and investors in making informed decisions.\n\n\nSale Date:\nThe Sale Date variable is crucial in housing price analysis for monitoring temporal patterns. It allows analysts to track how prices change over time, revealing trends that may correspond to economic conditions, interest rates, or seasonal fluctuations. By examining the Sale Date, one can also discern if there are particular times of the year when the market peaks or dips, which can be invaluable for both buyers looking for the best deal and sellers aiming for the optimal listing period.\nArea and Unit Price:\nOn the other hand, Area (SQM). and Unit Price ($ PSM). provide spatial and valuation metrics, respectively. The area of a property, often measured in square meters, directly influences its utility and potential for future modifications, affecting its market value. The unit price per square meter standardizes property values, making it possible to compare homes of different sizes and locations fairly. This metric is essential to understand what drives value in the housing market and to identify whether buyers are getting a reasonable price for the area they are purchasing in.\n\nCodePlotConclusion\n\n\n\nresale_data &lt;- data_cleaned %&gt;%\n  filter(`Type of Sale` == \"Resale\") %&gt;%\n  mutate(Quarter = as.yearqtr(`Sale Date`))\n\navg_price_by_quarter_resale &lt;- resale_data %&gt;%\n  group_by(Area_Category, Quarter) %&gt;%\n  summarise(Avg_Unit_Price_PSM = mean(`Unit Price ($ PSM)`, na.rm = TRUE), .groups = \"drop\")\n\np_line_resale &lt;- avg_price_by_quarter_resale %&gt;%\n  ggplot(aes(x = Quarter, y = Avg_Unit_Price_PSM, group = Area_Category, color = Area_Category)) +\n  geom_line() +\n  labs(title = \"Quarterly Average Unit Price ($ PSM) by Area Category for Resale\",\n       x = \"Quarter\",\n       y = \"Average Price ($ PSM)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        legend.position = \"none\")\n\np_line_resale_stacked &lt;- p_line_resale + facet_wrap(~Area_Category, ncol = 1, scales = \"free_y\")\n\ndata_q1_resale &lt;- resale_data %&gt;%\n  filter(Quarter == \"2024 Q1\") %&gt;%\n  mutate(Month = floor_date(`Sale Date`, \"month\"))\n\np_box_resale &lt;- ggplot(data_q1_resale, aes(x = Area_Category, y = `Unit Price ($ PSM)`, fill = Area_Category)) +\n  geom_boxplot() +\n  geom_jitter(width = 0.2, alpha = 0.001) +  # Adjusting alpha for visibility\n  facet_wrap(~Month, scales = \"free_y\") +\n  labs(title = \"Monthly Unit Price ($ PSM) by Area Category for Resale (Q1 2024)\",\n       x = \"Area Category\",\n       y = \"Price ($ PSM)\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\np_combined_resale &lt;- p_line_resale_stacked / p_box_resale\n\n\n\n\nprint(p_combined_resale)\n\n\n\n\n\n\nIn the resale housing market, the quarterly average unit price per square meter (PSM) exhibits contrasting trends: smaller properties (&lt;200 SQM) are gaining value, while larger ones (≥300 SQM) show price declines, indicating a shift in consumer preferences toward more compact living spaces. The Q1 2024 box plots reveal a broad price range within each area category, especially in the largest homes, suggesting that factors like location and amenities significantly influence pricing.\n\n\n\n\n\n\nProject Name:\nThe variable Project.Name represents the specific housing development or project. Analyzing data by Project.Name allows for a detailed understanding of the popularity and demand for specific developments. This can highlight developers’ reputation, location desirability, and unique features of individual projects that may influence prices. Trends can emerge, such as certain developers commanding premium prices or projects in specific locations being more sought-after.\nTotal Units and Avg Unit Price PSM:\nTotal_Units and Avg_Unit_Price_PSM are key metrics for assessing supply and value. Total_Units sold provides insight into the scale of a project and its market absorption rate. High sales volumes can indicate high demand or effective pricing strategies, while low volumes may signal overpricing or less desirable attributes. Avg_Unit_Price_PSM (average unit price per square meter) offers a comparative value indicator that normalizes prices across different sizes and types of properties, reflecting the price point at which the market clears. Analyzing this alongside Total_Units can reveal if there’s a relationship between the number of units sold and the price points, potentially guiding future development and pricing strategies.\n\nCodePlotConclusion\n\n\n\nresale_data &lt;- data_cleaned %&gt;%\n  filter(`Type of Sale` == \"Resale\")\n\nproject_stats &lt;- resale_data %&gt;%\n  filter(`Project Name` != \"N.A.\") %&gt;%\n  group_by(`Project Name`) %&gt;%\n  summarise(\n    Total_Units = sum(`Number of Units`, na.rm = TRUE),  # Sum up all units for each project\n    Avg_Unit_Price = mean(`Unit Price ($ PSM)`, na.rm = TRUE),  # Calculate the average price per square meter\n    .groups = \"drop\"  # Drop the grouping\n  )\n\ntop_projects &lt;- project_stats %&gt;%\n  top_n(25, Total_Units) %&gt;%\n  arrange(desc(Total_Units))\n\nproject_order &lt;- top_projects$`Project Name`\n\ntop_projects$`Project Name` &lt;- factor(top_projects$`Project Name`, levels = project_order)\nresale_data$`Project Name` &lt;- factor(resale_data$`Project Name`, levels = project_order)\n\np_units &lt;- ggplot(top_projects, aes(x = `Project Name`, y = Total_Units, fill = 'steelblue')) +\n  geom_bar(stat = \"identity\") +\n  labs(y = \"Total Number of Units\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n    legend.position = \"none\"\n  )\n\np_price &lt;- ggplot(resale_data, aes(x = `Project Name`, y = `Unit Price ($ PSM)`)) +\n  geom_boxplot() +\n  labs(y = \"Unit Price ($ PSM)\") +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),\n    legend.position = \"none\"\n  )\n\np_combined &lt;- p_units | p_price\n\n\n\n\np_combined\n\n\n\n\n\n\nThe bar chart depicts a significant lead in the total number of units sold by “Sol Acres,” suggesting a high demand or larger inventory. Other projects show a steady decrease in volume, indicating varied market preferences. The box plot showcases consistent unit price ranges within most projects, with notable premiums in “The Sail @ Marina Bay” and “Reflections at Keppel Bay,” likely due to their desirable locations or upscale amenities."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#conclusion-2",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#conclusion-2",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The data from the first quarter of 2024 shows that “Sol Acres” significantly leads in resale volumes, hinting at its market desirability, possibly due to a balance of affordability and attractive amenities. This project’s success may be a key indicator for those seeking value-for-money investments. In contrast, luxury segments like “The Sail @ Marina Bay” exhibit a wide price range, indicating a market for buyers with a taste for exclusivity and willingness to pay a premium for distinctive features.\nFor Consumers: Buyers should align their choices with their priorities: affordability may lead them to high-volume projects, while unique, high-quality features could draw them towards premium segments. When considering investment, a diversified approach that includes stable, high-volume properties and selective, high-value opportunities may offer balanced returns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#reference",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home Exercise 1.html#reference",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "URA releases flash estimate of 1st Quarter 2024 private residential property price index\nUnsold private housing stock on the rise ahead of ramp-up in new launches in 2024\nHDB resale prices rise 1.7%; private home prices up 1.5% in first quarter: Flash estimates"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Easter Eggs",
    "section": "",
    "text": "There are no\n\n\nEaster Eggs up here.\n\n\nGo away."
  },
  {
    "objectID": "about.html#section",
    "href": "about.html#section",
    "title": "Easter Eggs",
    "section": "",
    "text": "#\n\nThere are no\n\n#\n\nEaster Eggs up here.\n\n#\n\nGo away."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reference",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reference",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "URA releases flash estimate of 1st Quarter 2024 private residential property price index\nUnsold private housing stock on the rise ahead of ramp-up in new launches in 2024\nHDB resale prices rise 1.7%; private home prices up 1.5% in first quarter: Flash estimates"
  }
]